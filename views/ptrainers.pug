extends layouts/fe_master

block content
  style.
    .table-container {
      background: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
      margin-bottom: 20px;
    }
    .action-btns {
      white-space: nowrap;
    }
    .btn-sm {
      padding: 0.25rem 0.5rem;
      font-size: 0.875rem;
    }

  div.container
    h1.display-4= title

    div.table-container
      div.d-flex.justify-content-between.mb-3
        a.btn.btn-primary(href="/") 
          i.bi.bi-arrow-left
          |  Voltar à Página Inicial
        a.btn.btn-success(href="/clientes")
          i.bi.bi-people-fill
          |  Ver Todos Clientes

      table.table.table-striped.table-hover
        thead.table-dark
          tr
            th ID
            th Nome
            th Personal Trainer
            th Ações
        tbody
          each cliente in clientes
            tr
              td= cliente.id
              td= cliente.nome
              td= cliente.ptrainer || 'Sem personal trainer'
              td.action-btns
                button.btn.btn-sm.btn-info.me-1(type="button" data-bs-toggle="modal" data-bs-target=`#assignModal${cliente.id}`)
                  i.bi.bi-person-plus
                button.btn.btn-sm.btn-danger(type="button" data-bs-toggle="modal" data-bs-target=`#deleteModal${cliente.id}`)
                  i.bi.bi-trash

  // Assign Personal Trainer Modal for each client
  each cliente in clientes
    div.modal.fade(id=`assignModal${cliente.id}` tabindex="-1" aria-hidden="true")
      div.modal-dialog
        div.modal-content
          div.modal-header
            h5.modal-title Atribuir Personal Trainer
            button.btn-close(type="button" data-bs-dismiss="modal" aria-label="Close")
          div.modal-body
            form(id=`assignForm${cliente.id}`)
              div.mb-3
                label.form-label(for=`assignPTrainer${cliente.id}`) Selecionar Personal Trainer
                select.form-select(id=`assignPTrainer${cliente.id}` name="ptrainer_id")
                  option(value="") Sem personal trainer
                  if personal_trainers && personal_trainers.length
                    each pt in personal_trainers
                      option(value=pt.id selected=cliente.ptrainer_id===pt.id)= pt.nome
                  else
                    option(value="" disabled) Nenhum personal trainer disponível
          div.modal-footer
            button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Cancelar
            button.btn.btn-primary(type="button" id=`submitAssignForm${cliente.id}`) Guardar

    // Delete Modal for each client
    div.modal.fade(id=`deleteModal${cliente.id}` tabindex="-1" aria-hidden="true")
      div.modal-dialog
        div.modal-content
          div.modal-header
            h5.modal-title Confirmar Eliminação
            button.btn-close(type="button" data-bs-dismiss="modal" aria-label="Close")
          div.modal-body
            p Tem a certeza que deseja eliminar o cliente #{cliente.nome}?
            form(id=`deleteForm${cliente.id}`)
              input(type="hidden" name="_method" value="DELETE")
          div.modal-footer
            button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Cancelar
            button.btn.btn-danger(type="button" id=`submitDeleteForm${cliente.id}`) Eliminar

block scripts
  script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js")
  script.
    document.addEventListener('DOMContentLoaded', function() {
      // Handle assign personal trainer forms
      document.querySelectorAll('[id^="assignForm"]').forEach(form => {
        const id = form.id.replace('assignForm', '');
        const submitBtn = document.getElementById(`submitAssignForm${id}`);
        
        if (submitBtn) {
          submitBtn.addEventListener('click', function() {
            const ptrainerId = document.getElementById(`assignPTrainer${id}`).value;
            const formData = {
              ptrainer_id: ptrainerId || null
            };

            fetch(`/clientes/${id}/ptrainer`, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(formData)
            })
            .then(response => {
              if (response.ok) {
                bootstrap.Modal.getInstance(document.getElementById(`assignModal${id}`)).hide();
                location.reload();
              } else {
                throw new Error('Assignment failed');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              alert('Falha ao atribuir personal trainer');
            });
          });
        }
      });

      // Handle delete forms
      document.querySelectorAll('[id^="deleteForm"]').forEach(form => {
        const id = form.id.replace('deleteForm', '');
        const submitBtn = document.getElementById(`submitDeleteForm${id}`);
        
        if (submitBtn) {
          submitBtn.addEventListener('click', function() {
            fetch(`/clientes/${id}`, {
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json',
              }
            })
            .then(response => {
              if (response.ok) {
                bootstrap.Modal.getInstance(document.getElementById(`deleteModal${id}`)).hide();
                location.reload();
              } else {
                throw new Error('Delete failed');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              alert('Falha ao eliminar cliente');
            });
          });
        }
      });
    });